                                # H2 database connection properties configuration:
spring.datasource.url=jdbc:h2:file:/Users/sebastian/Coding/Bootcamp_IT_Academy/Sprint 4/Tasca 2_CRUD_SpringBoot/Nivel 1/H2BBDD
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password= #password
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# Opcion 2: spring.jpa.database-platform=org.hibernate.dialect.H2Dialect // VER SI USO EL DE ARRIBA O ESTE

spring.jpa.hibernate.ddl-auto= update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-ui

# In-memory database:
# spring.datasource.url: jdbc:h2:mem:[databaseName]
# Example: #spring.datasource.url=jdbc:h2:mem:testdb
# Disk-based database:
# jdbc:h2:file:[path/databaseName]

# spring.datasource.username & spring.datasource.password properties are the same as your database installation.
# Spring Boot uses Hibernate for JPA implementation, we configure H2Dialect for H2 Database.

# spring.jpa.hibernate.ddl-auto is used for database initialization. We set the value to update value so that a table
# will be created in the database automatically corresponding to defined data model. Any change to the model will also
# trigger an update to the table. For production, this property should be validate.

# spring.h2.console.enabled=true tells the Spring to start H2 Database administration tool and you can access this
# tool on the browser: http://localhost:8080/h2-console.

# spring.h2.console.path=/h2-ui is for H2 console?s url, so the default url http://localhost:8080/h2-console will
# change to http://localhost:8080/h2-ui.
# (default path: h2-console)




