# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
spring.datasource.url= jdbc:mysql://localhost:3306/fruits?createDatabaseIfNotExist=true
spring.datasource.username= root
spring.datasource.password= rootroot
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# 1) spring.jpa.hibernate.ddl-auto is used for database initialization. We set the value to update value so that a table
#    will be created in the database automatically corresponding to defined data model. Any change to the model will also
#    trigger an update to the table. For production, this property should be validate.

# 2) spring.datasource.url: writting "fruits?createDatabaseIfNotExist=true" we are telling to use the "fruits" database
#    and create it if it doesn't exist'.

# 3-4) spring.datasource.username & spring.datasource.password properties are the same as your database installation.

# 5) Spring Boot uses Hibernate for JPA implementation, we configure MySQL5InnoDBDialect (Spring Boot 2)/ MySQLDialect (Spring Boot 3)
# for MySQL or PostgreSQLDialect for PostgreSQL.

